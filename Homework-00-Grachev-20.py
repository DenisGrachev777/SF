#!/usr/bin/env python
# coding: utf-8

# In[29]:


import numpy as np
'''Ищем элемент путем бинарного поиска загаданного элемента'''
def game_core_v3(number):   
    digit_list = [count for count in range (1, 101)]
'''Определяем значения с которого начинается и заканчивается список'''
    start_list = digit_list[0]                       
    end_list = len(digit_list)
'''Значение колличества попыток на данном этапе будет равно нулю'''
    count = 0
'''Начинаем цикл while для поиска совпадений и будем его продолжать пока не выполнится условие'''
    while start_list <= end_list:
'''С каждым циклом счетчик будет увеличивать число попыток на одну'''
        count += 1         
'''Определяем среднее значение среди чисел нашего списка'''
        mid = (start_list+end_list)//2
'''Если среднеее значение будет больше чем загаданное число, 
то оно будет изменено на первое значение слева от текущего, при этом цикл начнется еще раз'''
        if mid > number:                             
            end_list = mid-1
'''Если среднеее значение будет меньше от загаданное число, 
то оно будет изменено на первое значение справа от текущего, при этом цикл начнется еще раз''' 
        elif mid < number:                           
            start_list = mid+1
'''Как только будет выполнено первое условие, программа прератиться и 
значение колличества попыток вернется'''
        else:                                        
            break                                    
    return(count)                                    


def score_game(game_core_v3):
    '''Запускаем игру 1000 раз, чтобы узнать, как быстро игра угадывает число'''
    count_ls = []
    np.random.seed(1)                                # фиксируем RANDOM SEED, чтобы ваш эксперимент был воспроизводим!
    random_array = np.random.randint(1,101, size=(1000))
    for number in random_array:
        count_ls.append(game_core_v3(number))
    score = int(np.mean(count_ls))
    print(f"Ваш алгоритм угадывает число в среднем за {score} попыток")
    return(score)


# In[30]:


score_game(game_core_v3)


# In[ ]:




